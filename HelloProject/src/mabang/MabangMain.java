package mabang;
import java.util.*;

public class MabangMain
{
    public static void main(String[] args)
    {
        // S(3,3) : 3행 3열로 된 마방진을 보관하는 2차원배열
        // R : 현재 처리할 배열 원소의 행
        // C : 현재 처리할 배열 원소의 열
        // NR : 다음에 처리할 배열 원소의 행
        // NC : 다음에 처리할 배열 원소의 열
        // N : 마방진의 각 원소에 할당될 1부터 25까지의 숫자를 보관
        // 일반적으로 N행N열 마방진의 경우 처음숫자 1은 1행의 중간열인 int(N/2)+1 에 배치된다.
        // 따라서 현재 문제의 3x3행렬에서는 S(1,int(3/2)+1) -> S(1,2) -> 1행 2열자리에 들어가게 된다.

        //배열은 초깃값이 0 이므로 0이 아니면 이미 값이 할당된 위치라고 여긴다.
        //1~9까지의 자연수값을 할당할 마방진 첫번째 원소의 할당
        //1~9의 자연수 N을 마방진에 배열하기 위해 N에 대한 반복문 생성
        //R,C의 초깃값 덕분에 1이 제위치에 할당된다.
        //45도 우측 위에 위치한 원소를 다음 차례로 잡는다. 이에 해당되는 행,열은 NC,NR이다. 필요하면 이를 수정.
        //다음차례 마방진 원소의 행 NR이 0이면 가장 끝인 3행으로 재조정
        //다음차례 마방진 원소의 열 NC가 6이면 1열로 재조정
        //다음차례의 원소 S(NR,NC)의 값이 0이면 아직N값이 할당되지 않은 위치이므로 NR,NC의 위치에 다음값 N을 할당하면 되므로
        //R,C를 변경하여 위에서 새로운 위치로 변경되도록 한다.
        //다음 차례의 원소 S(NR,NC)의 값이 0이 아니면 이미 할당된 경우이므로 R을 1만큼 증가시켜 S(R,C)에 다음 숫자 N을 할당한다.

        int S[][] = new int[3][3];
        int R=0,C=1;
        for(int N=1;N<=9;N++)//1~9의 자연수 N을 마방진에 배열하기 위해 N에 대한 반복문 생성
        {
            S[R][C] = N;    //R,C의 초깃값 덕분에 1이 제위치에 할당된다.

            int NR = R-1;
            int NC = C+1;   //45도 우측 위에 위치한 원소를 다음 차례로 잡는다. 이에 해당되는 행,열은 NC,NR이다. 필요하면 이를 수정.
            if(NR == -1)
            {
                NR = 2;     //다음차례 마방진 원소의 행 NR이 0이면 가장 끝인 3행으로 재조정
            }
            if(NC == 3)
            {
                NC = 0;        //다음차례 마방진 원소의 열 NC가 6이면 1열로 재조정
            }
            if(S[NR][NC]==0)
            {                       //다음차례의 원소 S(NR,NC)의 값이 0이면 아직N값이 할당되지 않은 위치이므로 NR,NC의 위치에 다음값 N을 할당하면 되므로
                                    //R,C를 변경하여 위에서 새로운 위치로 변경되도록 한다.
                R = NR;
                C = NC;
            }
            else
            {
                R++;        //다음 차례의 원소 S(NR,NC)의 값이 0이 아니면 이미 할당된 경우이므로 R을 1만큼 증가시켜 S(R,C)에 다음 숫자 N을 할당한다.
            }
        }
        for(int NR = 0;NR<=2;NR++)
        {
            for(int NC=0;NC<=2;NC++)
            {
                System.out.print(S[NR][NC]+"\t");
            }
            System.out.println();
        }
    }
}
